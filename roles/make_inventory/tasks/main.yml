---
- name: "Block to delegate tasks to localhost"
  delegate_to: localhost
  run_once: true
  block:
    - name: Init a session to request GLPI API
      ansible.builtin.uri:
        method: "GET"
        url: "{{ make_inventory_api_url }}/initSession?user_token={{ make_inventory_user_token }}"
        headers:
          Authorization: "user_token {{ make_inventory_user_token }}"
          App-Token: "{{ make_inventory_app_token }}"
        validate_certs: true
        status_code: 200
      register: api_init

    - name: Get actives linux computers
      ansible.builtin.uri:
        headers:
          App-Token: '{{ make_inventory_app_token }}'
          Session-Token: '{{ api_init.json["session_token"] }}'
        method: "GET"
        url: "{{ make_inventory_api_url }}/search/Computer?criteria[0][itemtype]=Computer\
          &criteria[0][field]=901&criteria[0][searchtype]=contains&criteria[0][value]=linux&criteria[0][link]=and\
          &criteria[1][field]=31&criteria[1][searchtype]=contains&criteria[1][value]=active&criteria[1][link]\
          &range=0-{{ make_inventory_max_glpi_computers_in_request }}"
        validate_certs: true
        status_code: 200
      register: glpi_computers

    - name: Kill the session
      ansible.builtin.uri:
        headers:
          App-Token: '{{ make_inventory_app_token }}'
          Session-Token: '{{ api_init.json["session_token"] }}'
        method: "GET"
        url: "{{ make_inventory_api_url }}/killSession"
        validate_certs: true
        status_code: 200

    - name: Save computers into a temp file
      ansible.builtin.copy:
        content: "{{ glpi_computers.json }}"
        dest: "{{ make_inventory_temp_glpi_computers_output_file_path }}"
        mode: '0644'

    - name: Call the Python inventory file maker
      ansible.builtin.command:
        cmd: "./venv/bin/python3 {{ make_inventory_inventory_maker_script_file_path }}"
      changed_when: false

    - name: Convert ini inventory file into yaml
      ansible.builtin.command:
        cmd: "ansible-inventory -i {{ make_inventory_temp_ini_inventory_output_file_path }} \
        --list --yaml --output {{ make_inventory_temp_yaml_inventory_output_file_path }}"
      notify:
        - "{{ make_inventory_inventory_file_treatment_type }}"
      changed_when: false

    - name: Flush handlers
      ansible.builtin.meta: flush_handlers

    - name: Remove the inventory files
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "{{ make_inventory_temp_glpi_computers_output_file_path }}"
        - "{{ make_inventory_temp_ini_inventory_output_file_path }}"
        - "{{ make_inventory_temp_yaml_inventory_output_file_path }}"
      when: not make_inventory_debug_mode
